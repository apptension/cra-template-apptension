import { createImmutableReducer, ReduxAction } from '../helpers';
import { {{ camelCase name }}Actions } from '.';

export interface {{ pascalCase name }}State {
  {{ camelCase name }}: any;
}

export const INITIAL_STATE: {{ pascalCase name }}State = {
  {{ camelCase name }}: null,
};

const handleFetch{{ pascalCase name }} = (state: {{ pascalCase name }}State) => {
  state.{{ camelCase name }} = null;
};

const handleFetch{{ pascalCase name }}Success = (state: {{ pascalCase name }}State, { payload }: ReduxAction<any>) => {
  state.{{ camelCase name }} = payload;
};

const HANDLERS = {
  [{{ camelCase name }}Actions.fetch{{ pascalCase name }}.toString()]: handleFetch{{ pascalCase name }},
  [{{ camelCase name }}Actions.fetch{{ pascalCase name }}Success.toString()]: handleFetch{{ pascalCase name }}Success,
};

export const reducer = createImmutableReducer(INITIAL_STATE, HANDLERS);
